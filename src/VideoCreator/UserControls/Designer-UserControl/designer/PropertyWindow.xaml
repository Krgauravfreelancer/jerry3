<UserControl x:Class="DesignerNp.controls.PropertyWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DesignerNp.controls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="Transparent"
             MouseLeave="UserControl_MouseLeave"
             MouseEnter="UserControl_MouseEnter">
    <UserControl.Resources>
        <Style TargetType = "TextBox">
            <Setter Property = "Margin" Value = "3" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType = "Label">
            <Setter Property = "Margin" Value = "3" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType = "CheckBox">
            <Setter Property = "Margin" Value = "3" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Viewbox x:Key="pin" Width="16 " Height="16" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib">
            <Rectangle Width="16 " Height="16">
                <Rectangle.Resources>
                    <SolidColorBrush x:Key="canvas" Opacity="0" />
                    <SolidColorBrush x:Key="light-defaultgrey" Color="#212121" Opacity="1" />
                    <SolidColorBrush x:Key="light-defaultgrey-10" Color="#212121" Opacity="0.1" />
                    <System:Double x:Key="cls-1">0.75</System:Double>
                </Rectangle.Resources>
                <Rectangle.Fill>
                    <DrawingBrush Stretch="None">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup x:Name="pinCanvas">
                                    <GeometryDrawing Brush="{DynamicResource canvas}" Geometry="F1M16,16H0V0H16Z" />
                                    <GeometryDrawing Brush="{DynamicResource canvas}" Geometry="F1M16,0V16H0V0Z" />
                                </DrawingGroup>
                                <DrawingGroup x:Name="pinLevel_1">
                                    <DrawingGroup Opacity="{DynamicResource cls-1}">
                                        <GeometryDrawing Brush="{DynamicResource light-defaultgrey}" Geometry="F1M8,10v5H7V10Z" />
                                    </DrawingGroup>
                                    <GeometryDrawing Brush="{DynamicResource light-defaultgrey-10}" Geometry="F1M10.5,1.5v8h-6v-8Z" />
                                    <GeometryDrawing Brush="{DynamicResource light-defaultgrey}" Geometry="F1M11,9V1.5L10.5,1h-6L4,1.5V9H3v1h9V9ZM5,9V2h5V9Z" />
                                </DrawingGroup>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>

        <Viewbox x:Key="unpin" Width="16 " Height="16" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib">
            <Rectangle Width="16 " Height="16">
                <Rectangle.Resources>
                    <SolidColorBrush x:Key="canvas" Opacity="0" />
                    <SolidColorBrush x:Key="light-defaultgrey" Color="#212121" Opacity="1" />
                    <SolidColorBrush x:Key="light-defaultgrey-10" Color="#212121" Opacity="0.1" />
                    <System:Double x:Key="cls-1">0.75</System:Double>
                </Rectangle.Resources>
                <Rectangle.Fill>
                    <DrawingBrush Stretch="None">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup x:Name="unpinCanvas">
                                    <GeometryDrawing Brush="{DynamicResource canvas}" Geometry="F1M0,0H16V16H0Z" />
                                </DrawingGroup>
                                <DrawingGroup x:Name="unPinLevel_1">
                                    <DrawingGroup Opacity="{DynamicResource cls-1}">
                                        <GeometryDrawing Brush="{DynamicResource light-defaultgrey}" Geometry="F1M6,9H1V8H6Z" />
                                    </DrawingGroup>
                                    <GeometryDrawing Brush="{DynamicResource light-defaultgrey-10}" Geometry="F1M14.5,11.5h-8v-6h8Z" />
                                    <GeometryDrawing Brush="{DynamicResource light-defaultgrey}" Geometry="F1M7,4H6v9H7V12h7.5l.5-.5v-6L14.5,5H7ZM7,6h7v5H7Z" />
                                </DrawingGroup>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>


        <Style x:Key="pinButtonStyle"
           TargetType="{x:Type ToggleButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{DynamicResource pin}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="{DynamicResource unpin}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="verticalText"
           TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="90" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="cbButton" TargetType="Button">
            <Setter Property="Background" Value="#97C3F2"/>
            <!--Setter Property="Foreground" Value="#0345bf"/-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="#0345bf"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" x:Name="verticalLine"  Background="#e9edf2" Width="20" HorizontalAlignment="Right" MouseLeftButtonDown="verticalLine_MouseLeftButtonDown" MouseLeftButtonUp="verticalLine_MouseLeftButtonUp">
            <Button x:Name="btnOpenProperties"  Style="{StaticResource cbButton}" Content="Properties" Click="btnOpenProperties_Click" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" BorderBrush="{x:Null}" Padding="7,1,7,1" VerticalAlignment="Top">
                <Button.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.LayoutTransform>

            </Button>
        </Border>
        <Grid  Background="Transparent" x:Name="gridProperties" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32*"/>
                <ColumnDefinition Width="55*"/>
            </Grid.ColumnDefinitions>

            <!-- Properties -->
            <Grid Grid.Row="0" Grid.ColumnSpan="2" Background="#97C3F2" >
                <Label Grid.Row="0" Grid.Column="0" x:Name="lblTitle" Background="#97C3F2" Content="Properties" Margin="3,3,3,0" Grid.RowSpan="2" VerticalAlignment="Top" ></Label>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button x:Name="btnClose" Background="Transparent" Content="X" BorderBrush="{x:Null}" Padding="5,1,5,1" Click="btnClose_Click"/>
                    <ToggleButton  x:Name="btnPin"  Background="Transparent" BorderBrush="{x:Null}" Style="{StaticResource pinButtonStyle}" Checked="btnPin_Checked" Unchecked="btnPin_Unchecked"/>
                </StackPanel>
            </Grid>

            <!--Color-->
            <Label Grid.Row="1" Content="Color"/>
            <xctk:ColorPicker Grid.Row="1" Grid.Column="1" x:Name="colorPicker" VerticalAlignment="Center" SelectedColorChanged="colorPicker_SelectedColorChanged"/>

            <!-- Hidden -->
            <Label Grid.Row="2" Content="Hidden"/>
            <CheckBox Grid.Row="2" Grid.Column="1" x:Name="cbHidden"/>

            <!--Position-->
            <Label Grid.Row="3" Content="Position" />
            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!-- Position X -->
                <TextBox Grid.Column="0" x:Name="txtPositionX" Text="" TextChanged="txtPositionX_TextChanged" GotFocus="txt_GotFocus"/>
                <!--Position Y-->
                <TextBox Grid.Column="1" x:Name="txtPositionY" Text="" TextChanged="txtPositionY_TextChanged" GotFocus="txt_GotFocus"/>
            </Grid>

            <!-- Size -->
            <Label Grid.Row="4" Content="Size"  />
            <Grid Grid.Row="4" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!-- Size X -->
                <TextBox Grid.Column="0" x:Name="txtSizeX" Text=""  TextChanged="txtSizeX_TextChanged" GotFocus="txt_GotFocus"/>

                <!-- Size Y -->
                <TextBox Grid.Column="1" x:Name="txtSizeY" Text=""  TextChanged="txtSizeY_TextChanged" GotFocus="txt_GotFocus"/>
            </Grid>

            <!-- Rotation -->
            <Label Grid.Row="5" Content="Rotation"  />
            <TextBox Grid.Row="5" Grid.Column="1" x:Name="txtRotation" Text=""  TextChanged="txtRotation_TextChanged" GotFocus="txt_GotFocus"/>

            <!-- Multiline -->
            <Label Grid.Row="6" Content="Multiline" />
            <CheckBox Grid.Row="6" Grid.Column="1"  x:Name="cbMultiline" Checked="cbMultiline_Checked" Unchecked="cbMultiline_Unchecked"/>

            <!-- Text -->
            <Label Grid.Row="7" Content="Text" />
            <TextBox Grid.Row="7" Grid.Column="1" x:Name="txtText" Text=""  TextChanged="txtText_TextChanged" GotFocus="txt_GotFocus"/>

            <!-- Text -->
            <Label Grid.Row="8" Content="Font Size" />
            <TextBox Grid.Row="8" Grid.Column="1" x:Name="txtFontSize" Text=""  TextChanged="txtFontSize_TextChanged" GotFocus="txt_GotFocus"/>

            <!-- Start -->
            <Label Grid.Row="9" Content="Start" />
            <Grid Grid.Row="9" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!-- Start X -->
                <TextBox Grid.Column="0" x:Name="txtStartX" Text=""  TextChanged="txtStartX_TextChanged" GotFocus="txt_GotFocus"/>
                <!-- Start Y -->
                <TextBox Grid.Column="1" x:Name="txtStartY" Text=""  TextChanged="txtStartY_TextChanged" GotFocus="txt_GotFocus"/>
            </Grid>

            <!-- End -->
            <Label Grid.Row="10" Content="End" />
            <Grid Grid.Row="10" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!-- End X -->
                <TextBox Grid.Column="0" x:Name="txtEndX" Text="" TextChanged="txtEndX_TextChanged" GotFocus="txt_GotFocus"/>
                <!-- ENd Y -->
                <TextBox Grid.Column="1" x:Name="txtEndY" Text="" TextChanged="txtEndY_TextChanged" GotFocus="txt_GotFocus"/>
            </Grid>

            <Label Grid.Row="11" Grid.Column="0"  Content="Align" />
            <Grid Grid.Row="11" Grid.Column="1" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="leftAlign" Content="L" Click = "leftAlign_Click" Width="30" Height="20" Margin="0,0,1,0"/>
                <Button Grid.Column="1" x:Name="CenterAlign" Content="C" Click="centerAlign_Click" Width="30" Height="20" Margin="0,0,1,0"/>
                <Button Grid.Column="2" x:Name="rightAlign" Content="R" Click="rightAlign_Click" Width="30" Height="20"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
